;HelloWorld.asm
;author: Mike LaSalvia
; system calls: /usr/include/i386-linux-gnu/unistd_32.h

global _start

section .text

;entry point of the program
_start:

; sys call 4 for write. EAX MUST CONTAIN THE SYSTEM CALL. EBX-EDI will contain arguments 1 -5
; man 2 write: sys call 4 for write requires the std out = 1, the message to print, and the length of meeage
; eax = sys call number (4) , ebx = stdout (1), ecx = pointer to hello world, edx = length of hello world


;print hello to screen
        mov eax, 0x4 ; or just 4, move value of 4 into the eax register.
        mov ebx, 0x1
        mov ecx, message
        mov edx, mlen ; or you can count it out
        int 0x80 ; interupt sys call.

; exit program gracefully
; man 2 exit: sys call, error value, normally 0 for no errors.
        mov eax, 0x1 ; sys call 1 to exit
        mov ebx, 0x0
        int 0x80

section .data
; label for the string hello world message is the label.
        message: db "Hello World!"
        mlen equ $-message ; automatically get message length to avoid counting for the mov edx in the print
